#
# Ci-dessous les variables pour configurer les conteneurs de sudoc-docker
# Marche à suivre:
#   il faut copier ce fichier dans un fichier .env
#   avant de démarrer l'application avec docker-compose up
#

######################################################
# Paramètres globaux
######################################################
MEM_LIMIT=5g
CONVERGENCE_SUDOC_API_VERSION=develop-sudoc-api
CONVERGENCE_API_SPRING_PROFILES_ACTIVE=dev

######################################################
# Paramétrage de sudoc-api
######################################################
CONVERGENCE_SUDOC_API_HTTP_PORT=15080
CONVERGENCE_API_SPRING_DATASOURCE_BASEXML_JDBCURL=jdbc:oracle:thin:@//orpins-t-scan.v110.abes.fr:1521/APISUDOC
CONVERGENCE_API_SPRING_DATASOURCE_BASEXML_USERNAME=___A_COMPLETER___
CONVERGENCE_API_SPRING_DATASOURCE_BASEXML_PASSWORD=___A_COMPLETER___
CONVERGENCE_API_SUDOC_SERVEUR=___A_COMPLETER___
CONVERGENCE_API_SUDOC_LOGIN=___A_COMPLETER___
CONVERGENCE_API_SUDOC_PASS=___A_COMPLETER___

######################################################
# Paramétrage de convergence-watchtower
######################################################
# Pour les notifications slack des déploiements continus de convergence
# cf https://containrrr.dev/watchtower/notifications/#slack
# A noter : penser à indiquer le nom de l'environnement dev, test, prod
# au niveau de la variable WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER pour pouvoir
# mieux distinguer sur quel machine a été réalisé le déploiement
# - en local laisser CONVERGENCE_WATCHTOWER_RUN_ONCE=true
# - en dev, test, prod, positionner CONVERGENCE_WATCHTOWER_RUN_ONCE=false
CONVERGENCE_WATCHTOWER_NOTIFICATION_SLACK_HOOK_URL=https://hooks.slack.com/services/xxxxxx/yyyyyyyyyyyyyyyyyy
CONVERGENCE_WATCHTOWER_NOTIFICATION_SLACK_IDENTIFIER=local convergence-watchtower
CONVERGENCE_WATCHTOWER_RUN_ONCE=true

